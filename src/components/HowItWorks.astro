---
const code1 = `from playgent.openai import OpenAI  # One import change
from playgent import record

@record
def inference(user_input: str):
    client = OpenAI()
    response = client.responses.create(
        model="gpt-4",
        input=[{"role": "user", "content": user_input}]
    )
    return response`.trim();
const code4 = `def test_seat_change():
    with replay_test(test_case_id) as (inputs, judge):
        for inp in inputs:
            inference(**inp.arguments) # Replay the exact sequence of inputs
        result = judge.evaluate() # Evaluate with rubrics generated by Playgent
    assert result.passed`.trim();
---

<section id="how" class="section" style="padding-top:40px;">
  <div class="container">
    <div class="how-box" style="border-left:1px solid var(--border);border-right:1px solid var(--border);position:relative;">
      <!-- <h2 style="text-align:center;padding:80px 0 32px;">How it works</h2> -->
      
      <div class="step-item">
        <div style="display:flex;align-items:center;gap:16px;margin-bottom:16px;">
          <div style="width:40px;height:40px;display:grid;place-items:center;border:1px solid var(--accent);background:rgba(0,229,255,0.1);">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 17V7a2 2 0 0 1 2-2h7" stroke="currentColor" stroke-width="2"/><path d="M14 3l7 7-7 7V3Z" stroke="var(--accent)" stroke-width="2"/></svg>
          </div>
          <strong style="font-size:20px;">Step 1: Instrument Your Code</strong>
        </div>
        <p style="color:var(--muted);margin-bottom:20px;">Add one decorator. Change one import. That's it.</p>
        <pre style="margin:0;"><code class="language-python">{code1}</code></pre>
      </div>

      <div class="step-item">
        <div style="display:flex;align-items:center;gap:16px;margin-bottom:16px;">
          <div style="width:40px;height:40px;display:grid;place-items:center;border:1px solid var(--accent);background:rgba(0,229,255,0.1);">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4 6h16v12a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6Z" stroke="currentColor" stroke-width="2"/><circle cx="12" cy="12" r="3" stroke="var(--accent)" stroke-width="2"/></svg>
          </div>
          <strong style="font-size:20px;">Step 2: Create a Test Case</strong>
        </div>
        <p style="color:var(--muted);margin-bottom:20px;">Create a test case for a specific agent task. Next, you will need to demonstrate it once to Playgent.</p>
        <img src="/createtest.gif" alt="Session capture showing API calls streaming live" style="width:100%;border-radius:12px;border:1px solid var(--border-bright);" />
      </div>

      <div class="step-item">
        <div style="display:flex;align-items:center;gap:16px;margin-bottom:16px;">
          <div style="width:40px;height:40px;display:grid;place-items:center;border:1px solid var(--accent);background:rgba(0,229,255,0.1);">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M17 3h4v4" stroke="currentColor" stroke-width="2"/><path d="M21 3l-7 7" stroke="var(--accent)" stroke-width="2"/><rect x="3" y="7" width="14" height="14" rx="2" stroke="currentColor" stroke-width="2"/></svg>
          </div>
          <strong style="font-size:20px;">Step 3: Demonstrate It Once</strong>
        </div>
        <p style="color:var(--muted);margin-bottom:20px;">Run your agent. Playgent automatically records inputs, agent events, and tool calls. Annotate the session and set it as the demonstration for your test case.</p>
        <img src="/annotatesession.png" alt="Recording a session and setting it as demonstration" style="width:100%;border-radius:12px;border:1px solid var(--border-bright);" />
      </div>

      <div class="step-item" style="border-bottom:none;">
        <div style="display:flex;align-items:center;gap:16px;margin-bottom:16px;">
          <div style="width:40px;height:40px;display:grid;place-items:center;border:1px solid var(--accent);background:rgba(0,229,255,0.1);">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5 3v18" stroke="currentColor" stroke-width="2"/><path d="M7 12h5l4 8 5-16" stroke="var(--accent)" stroke-width="2"/></svg>
          </div>
          <strong style="font-size:20px;">Step 4: Run Test</strong>
        </div>
        <p style="color:var(--muted);margin-bottom:20px;">Run your test by replaying the demonstration session. Evaluate results. Fix bugs, modify prompts, add tool calls while running tests in one click.</p>
        <pre style="margin:0 0 20px;"><code class="language-python">{code4}</code></pre>
        <img src="/rubric.png" alt="Test results showing evaluation metrics and rubric" style="width:100%;border-radius:12px;border:1px solid var(--border-bright);" />
      </div>

    </div>
  </div>
</section>

<style>
  /* Extended borders for how box */
  .how-box::before,
  .how-box::after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 100vw;
    height: 1px;
    background: var(--border);
    z-index: -1;
  }
  
  .how-box::before {
    top: -1px;
  }
  
  .how-box::after {
    bottom: -1px;
  }

  .step-item {
    padding: 64px;
    border-bottom: 1px solid var(--border);
  }

  @media (max-width: 768px) {
    .step-item {
      padding: 40px 32px;
    }
  }
</style>


